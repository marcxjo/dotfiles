#!/bin/sh

windows=( $(bspc query -N -d $MON:focused) )
fwindows=( $(bspc query -N -n .focused -m $MON) )


# Check whether the current wid is in the focused array.
function in_focus () {
  local n=$#
  local value=${!n}
  for (( i = 1 ; i < $n; i++ )) {
  if [ "${!i}" == "${value}" ]; then
    echo "y"
    return 0
  fi
  }
  echo "n"
  return 1
}

# Grab the window icon, if it has one.
# The file refernced in the function lists
# icons and window class terms for simple matching.
function get_icon () {
  grep -m1 "$1" ${HOME}/.config/panel/iconizer | awk '{print $1}'
}

# Window title "buttons," complete with padding.
function _wj_with_icon () {
  _jtitle=$(wtitle ${1})

  if [[ ${#_jtitle} -gt 26 ]]
  then
    printf %-26s%-3s "${_jtitle:0:26}" "..."
  else
    _jtitle+=$(printf %$((26 - ${#_jtitle}))s)
    printf %-29s "${_jtitle:0:26}"
  fi
}

# Fallback buttons for windows without icons..
function wjustify () {
  _wtitle=$(wtitle ${1})

  if [[ ${#_wtitle} -gt 29 ]]
  then
  printf %-29s%-3s "${_wtitle:0:29}" "..."
  else
  _wtitle+=$(printf %$((32 - ${#_wtitle}))s)
  printf %-32s "${_wtitle:0:32}"
  fi
}

# Create the window button.
function iconize () {
  _thewin="$1"
  _iclass=( $(xprop -id "${_thewin}" WM_CLASS | sed 's|^.*"\(.*\)", "\(.*\)".*$|\1 \2|') )

  for name in ${_iclass[@]}
  do
    if [ -n "$(get_icon "${name}")" ]
    then
      printf " %s  %28s" "$(get_icon "${name}")" "$(_wj_with_icon "${_thewin}")"
      return
    fi
  done

  # Fall back to icon-less button if the loop completes.
  wjustify ${1}
}

for item in "${windows[@]}"
do
  if [[ "$(in_focus "${fwindows[@]}" "$item")" = "y" && -n "$(wtitle $item)" ]]
  then
    _win+=" %{A:toggle_window "$item":} $(iconize "$item") %{A} ${P_SEP}"
  elif [ -n "$(wtitle $item)" ]
  then
    _win+="  %{F${color6}}%{A:toggle_window "$item":}$(iconize "$item")%{A}%{F-}  ${P_SEP}"
  fi
done

echo "${_win%${P_SEP}}"
